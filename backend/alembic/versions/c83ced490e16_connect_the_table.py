"""connect the table 

Revision ID: c83ced490e16
Revises: 4317f854cee0
Create Date: 2025-10-19 16:57:56.397516

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c83ced490e16'
down_revision: Union[str, Sequence[str], None] = '4317f854cee0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_table_client_id'), table_name='user_table')
    op.drop_index(op.f('ix_user_table_user_Email'), table_name='user_table')
    op.drop_index(op.f('ix_user_table_user_id'), table_name='user_table')
    op.drop_table('user_table')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_table',
    sa.Column('client_id', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('App_id', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('Role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('User_Name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('user_Email', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('user_PhoneNo', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('Address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_country', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('user_State', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('user_district', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_by', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name=op.f('user_table_pkey'))
    )
    op.create_index(op.f('ix_user_table_user_id'), 'user_table', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_table_user_Email'), 'user_table', ['user_Email'], unique=True)
    op.create_index(op.f('ix_user_table_client_id'), 'user_table', ['client_id'], unique=False)
    # ### end Alembic commands ###
